version: "3.9"
services:
  nginx:
    image: nginx
    volumes:
      - "./nginx/logs:/var/log/nginx"
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "./ssl:/etc/nginx/ssl"
    depends_on:
      - backend
      - frontend
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 10s
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./data/clusters/pgdata:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 10s
  pgbackup:
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - ./data/backups/pgbackup:/backups
    links:
      - postgres:postgres
    depends_on:
      - postgres
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${DB_NAME} 
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_EXTRA_OPTS=-Z9 --schema=public --blobs
      - SCHEDULE=@every 0h30m00s
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
  redis:
    image: redis:latest
    restart: always
    volumes:
      - ./data/clusters/redisdata:/data
    expose:
      - 6379
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -h redis ping"]
      interval: 5s
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 10s
  backend:
    image: gobot/backend
    build:
      context: ./packages/backend
      dockerfile: ./Dockerfile
    expose:
      - 4000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null http://backend:4000/api || exit 1"]
      interval: 5s
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 10s
  frontend:
    image: gobot/frontend
    build:
      context: ./packages/frontend
      dockerfile: ./Dockerfile
    expose:
      - 3000
    depends_on:
      backend:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 10s